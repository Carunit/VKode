# Form implementation generated from reading ui file 'devview.ui'
#
# Created by: PyQt6 UI code generator 6.1.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import os
from pathlib import Path
import webbrowser

from colorama import init
init()
from colorama import Fore, Back, Style

print("  > Initializing Dev View")
print("")

print(Back.RED + 'DO NOT CLOSE THIS WINDOW!')
print(Style.RESET_ALL)



saver = open("files/savers/1.saver", "r")
file1 = saver.read()
saver = open("files/savers/2.saver", "r")
file2 = saver.read()
saver = open("files/savers/3.saver", "r")
file3 = saver.read()
saver = open("files/savers/1.saver", "r")

file1 = (file1.replace("\\", '/'))
file2 = (file2.replace("\\", '/'))
file3 = (file3.replace("\\", '/'))



def onClick1(checked):
    os.startfile(file1)
    print("  > Opening file in external application", file1)

def onClick2(checked):
    os.startfile(file2)
    print("  > Opening file in external application", file2)

def onClick3(checked):
    os.startfile(file3)
    print("  > Opening file in external application", file3)

def onClick4(checked):
    os.startfile(file3)
    print("  > ")

def clickedLog(checked):
    consolelocationtwo = (os.path.dirname(__file__))
    consolelocationtwo = (consolelocationtwo.replace('\\', '/'))
    os.startfile(consolelocationtwo + "/../log.txt")
    print("  > Searching for log.txt")

def clickedExit(self):
    print("  > Restarting Dev view")
    print("  > Restart failed")

def clickedExit_2(self):
    print("  > Exiting")
    exit()

def clickedConsole(self):
    print("  > Starting VKode Console")
    consolelocation = os.path.dirname(os.path.realpath(__file__))
    consolelocation = (consolelocation.replace('\\', '/'))
    Str = consolelocation
    l = len(Str)
    consolelocation = Str[:l-7]
    consolelocation = consolelocation + "console.exe"
    print("  > Searching for Console at", consolelocation)
    os.startfile(consolelocation)

def clickedSettings(self):
    consolelocationtwo = (os.path.dirname(__file__))
    consolelocationtwo = (consolelocationtwo.replace('\\', '/'))
    os.startfile(consolelocationtwo + "/../vksettings.txt")
    print("  > Searching for vksettings.txt")

def clickedDoc(self):
    print("  > Opening VKode documentation in your browser")
    webbrowser.open("https://google.com", new=2)

def clickedWeb(self):
    print("  > Opening VKode website in your browser")
    webbrowser.open("http://vkode.gq", new=2)

def clickedTwitter(self):
    print("  > Opening VKode Twitter in your browser, make sure you're following me :)")
    webbrowser.open("https://twitter.com/vkode_", new=2)



print("  > Recent files loaded")
print("  > Loading window")

print('    ____                 _    ___ ')
print('   / __ \___ _   __     | |  / (_)__ _      __')
print('  / / / / _ \ | / /     | | / / / _ \ | /| / /')
print(" / /_/ /  __/ |/ /      | |/ / /  __/ |/ |/ / ")
print("/_____/\___/|___/       |___/_/\___/|__/|__/ ")
print("Dev View, Part of VKode software bundle, (c) VÃ­t Kozel, 2021. https://vkode.xyz")

print("")
print(Back.RED + 'DO NOT CLOSE THIS WINDOW!')
print(Style.RESET_ALL)
print("")
print("")







class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(787, 518)
        MainWindow.setMaximumSize(787, 518)
        MainWindow.setMinimumSize(787, 518)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonStyle.ToolButtonTextOnly)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 10, 301, 91))
        font = QtGui.QFont()
        font.setFamily("Leelawadee UI")
        font.setPointSize(48)
        font.setBold(True)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 110, 671, 31))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(20, 140, 751, 16))
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line.setObjectName("line")
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setGeometry(QtCore.QRect(20, 180, 751, 16))
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_2.setObjectName("line_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 150, 681, 31))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(20, 190, 681, 31))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(690, 120, 81, 24))
        font = QtGui.QFont()
        font.setFamily("Leelawadee UI")
        font.setPointSize(12)
        font.setBold(True)
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.pushButton.setFlat(True)
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(onClick1)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(690, 153, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Leelawadee UI")
        font.setPointSize(12)
        font.setBold(True)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.pushButton_2.setFlat(True)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(onClick2)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(690, 190, 81, 41))
        font = QtGui.QFont()
        font.setFamily("Leelawadee UI")
        font.setPointSize(12)
        font.setBold(True)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.pushButton_3.setFlat(True)
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(onClick3)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(650, 230, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Leelawadee UI")
        font.setPointSize(11)
        font.setBold(True)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.pushButton_4.setAutoRepeat(False)
        self.pushButton_4.setAutoExclusive(False)
        self.pushButton_4.setAutoDefault(False)
        self.pushButton_4.setDefault(False)
        self.pushButton_4.setFlat(True)
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_4.clicked.connect(onClick4)
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setGeometry(QtCore.QRect(20, 220, 751, 16))
        self.line_3.setFrameShadow(QtWidgets.QFrame.Shadow.Plain)
        self.line_3.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_3.setObjectName("line_3")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(20, 230, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Leelawadee UI")
        font.setPointSize(11)
        font.setBold(True)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setCursor(QtGui.QCursor(QtCore.Qt.CursorShape.PointingHandCursor))
        self.pushButton_5.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.pushButton_5.setAutoFillBackground(False)
        self.pushButton_5.setAutoRepeat(False)
        self.pushButton_5.setAutoExclusive(False)
        self.pushButton_5.setAutoDefault(False)
        self.pushButton_5.setDefault(False)
        self.pushButton_5.setFlat(True)
        self.pushButton_5.setObjectName("pushButton_5")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(300, 40, 101, 61))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(18)
        font.setUnderline(False)
        self.label_5.setFont(font)
        self.label_5.setAutoFillBackground(False)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(0, 420, 781, 21))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiBold SemiConden")
        font.setPointSize(9)
        font.setBold(True)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(0, 440, 781, 21))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Light SemiCondensed")
        font.setPointSize(9)
        font.setBold(False)
        font.setItalic(False)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignmentFlag.AlignCenter)
        self.label_7.setObjectName("label_7")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 787, 22))
        self.menubar.setProperty("Exit", "")
        self.menubar.setObjectName("menubar")
        self.menuDev_View = QtWidgets.QMenu(self.menubar)
        self.menuDev_View.setObjectName("menuDev_View")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuFTP = QtWidgets.QMenu(self.menuTools)
        self.menuFTP.setObjectName("menuFTP")
        self.menuVKode_Updater = QtWidgets.QMenu(self.menuTools)
        self.menuVKode_Updater.setObjectName("menuVKode_Updater")
        self.menuModules = QtWidgets.QMenu(self.menubar)
        self.menuModules.setObjectName("menuModules")
        self.menuLearn = QtWidgets.QMenu(self.menubar)
        self.menuLearn.setObjectName("menuLearn")
        self.menuLesson = QtWidgets.QMenu(self.menuLearn)
        self.menuLesson.setObjectName("menuLesson")
        self.menuRepair_2 = QtWidgets.QMenu(self.menubar)
        self.menuRepair_2.setObjectName("menuRepair_2")
        self.menuValidate_files = QtWidgets.QMenu(self.menuRepair_2)
        self.menuValidate_files.setObjectName("menuValidate_files")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionExit = QtGui.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionExit.triggered.connect(clickedExit)
        self.actionOpen_Console = QtGui.QAction(MainWindow)
        self.actionOpen_Console.setObjectName("actionOpen_Console")
        self.actionOpen_folder = QtGui.QAction(MainWindow)
        self.actionOpen_folder.setObjectName("actionOpen_folder")
        self.actionDocumentation = QtGui.QAction(MainWindow)
        self.actionDocumentation.setObjectName("actionDocumentation")
        self.actionOfficial_Website = QtGui.QAction(MainWindow)
        self.actionOfficial_Website.setObjectName("actionOfficial_Website")
        self.actionTwitter = QtGui.QAction(MainWindow)
        self.actionTwitter.setObjectName("actionTwitter")
        self.actionExit_2 = QtGui.QAction(MainWindow)
        self.actionExit_2.setShortcut("")
        self.actionExit_2.setObjectName("actionExit_2")
        self.actionExit_2.triggered.connect(clickedExit_2)
        self.actionFTP = QtGui.QAction(MainWindow)
        self.actionFTP.setObjectName("actionFTP")
        self.actionrun_logs = QtGui.QAction(MainWindow)
        self.actionrun_logs.setObjectName("actionrun_logs")
        self.action_s = QtGui.QAction(MainWindow)
        self.action_s.setObjectName("action_s")
        self.actionFTP_2 = QtGui.QAction(MainWindow)
        self.actionFTP_2.setObjectName("actionFTP_2")
        self.actionFTP_2.triggered.connect(clickedLog)
        self.actionSet_FTP = QtGui.QAction(MainWindow)
        self.actionSet_FTP.setObjectName("actionSet_FTP")
        self.actionPush_FTP = QtGui.QAction(MainWindow)
        self.actionPush_FTP.setObjectName("actionPush_FTP")
        self.actionVKode_Settings = QtGui.QAction(MainWindow)
        self.actionVKode_Settings.setObjectName("actionVKode_Settings")
        self.actionVKode_Settings.triggered.connect(clickedSettings)
        self.actionAbout = QtGui.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCheck_for_updates = QtGui.QAction(MainWindow)
        self.actionCheck_for_updates.setObjectName("actionCheck_for_updates")
        self.actionDocumentation_2 = QtGui.QAction(MainWindow)
        self.actionDocumentation_2.setObjectName("actionDocumentation_2")
        self.actionSet_FTP_2 = QtGui.QAction(MainWindow)
        self.actionSet_FTP_2.setObjectName("actionSet_FTP_2")
        self.actionPush_FTP_2 = QtGui.QAction(MainWindow)
        self.actionPush_FTP_2.setObjectName("actionPush_FTP_2")
        self.actionFirst_steps = QtGui.QAction(MainWindow)
        self.actionFirst_steps.setObjectName("actionFirst_steps")
        self.actionHow_to_Dev_View = QtGui.QAction(MainWindow)
        self.actionHow_to_Dev_View.setObjectName("actionHow_to_Dev_View")
        self.actionFirst_steps_2 = QtGui.QAction(MainWindow)
        self.actionFirst_steps_2.setObjectName("actionFirst_steps_2")
        self.actionFiles = QtGui.QAction(MainWindow)
        self.actionFiles.setObjectName("actionFiles")
        self.actionDonate = QtGui.QAction(MainWindow)
        self.actionDonate.setObjectName("actionDonate")
        self.actionGetting_started = QtGui.QAction(MainWindow)
        self.actionGetting_started.setObjectName("actionGetting_started")
        self.actionCheck_for_DV_updates = QtGui.QAction(MainWindow)
        self.actionCheck_for_DV_updates.setObjectName("actionCheck_for_DV_updates")
        self.actionCheck_for_Devview_updates = QtGui.QAction(MainWindow)
        self.actionCheck_for_Devview_updates.setObjectName("actionCheck_for_Devview_updates")
        self.actionCheck_for_updates_2 = QtGui.QAction(MainWindow)
        self.actionCheck_for_updates_2.setObjectName("actionCheck_for_updates_2")
        self.actionGet_modules = QtGui.QAction(MainWindow)
        self.actionGet_modules.setObjectName("actionGet_modules")
        self.actionInstalled_modules = QtGui.QAction(MainWindow)
        self.actionInstalled_modules.setObjectName("actionInstalled_modules")
        self.actionLearn = QtGui.QAction(MainWindow)
        self.actionLearn.setObjectName("actionLearn")
        self.actionDocumentation_3 = QtGui.QAction(MainWindow)
        self.actionDocumentation_3.setObjectName("actionDocumentation_3")
        self.actionVideos_2 = QtGui.QAction(MainWindow)
        self.actionVideos_2.setObjectName("actionVideos_2")
        self.actionChoose = QtGui.QAction(MainWindow)
        self.actionChoose.setObjectName("actionChoose")
        self.actionDev_View_FTP = QtGui.QAction(MainWindow)
        self.actionDev_View_FTP.setObjectName("actionDev_View_FTP")
        self.actionPublish_module = QtGui.QAction(MainWindow)
        self.actionPublish_module.setObjectName("actionPublish_module")
        self.actionPublish_module_2 = QtGui.QAction(MainWindow)
        self.actionPublish_module_2.setObjectName("actionPublish_module_2")
        self.actionValidate_VKode_files = QtGui.QAction(MainWindow)
        self.actionValidate_VKode_files.setObjectName("actionValidate_VKode_files")
        self.actionReinstall_VKode = QtGui.QAction(MainWindow)
        self.actionReinstall_VKode.setObjectName("actionReinstall_VKode")
        self.actionValidate_Console_files = QtGui.QAction(MainWindow)
        self.actionValidate_Console_files.setObjectName("actionValidate_Console_files")
        self.actionValidate = QtGui.QAction(MainWindow)
        self.actionValidate.setObjectName("actionValidate")
        self.actionValidate_All = QtGui.QAction(MainWindow)
        self.actionValidate_All.setObjectName("actionValidate_All")
        self.menuDev_View.addAction(self.actionExit_2)
        self.menuHelp.addAction(self.actionOfficial_Website)
        self.menuHelp.addAction(self.actionTwitter)
        self.menuHelp.addAction(self.actionDonate)
        self.menuFTP.addAction(self.actionSet_FTP_2)
        self.menuFTP.addAction(self.actionPush_FTP_2)
        self.menuVKode_Updater.addAction(self.actionCheck_for_updates_2)
        self.menuTools.addAction(self.actionFTP_2)
        self.menuTools.addAction(self.actionVKode_Settings)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.menuFTP.menuAction())
        self.menuTools.addAction(self.menuVKode_Updater.menuAction())
        self.menuModules.addAction(self.actionGet_modules)
        self.menuModules.addAction(self.actionInstalled_modules)
        self.menuModules.addAction(self.actionPublish_module)
        self.menuModules.addSeparator()
        self.menuModules.addAction(self.actionPublish_module_2)
        self.menuLesson.addAction(self.actionChoose)
        self.menuLearn.addAction(self.actionDocumentation_3)
        self.menuLearn.addAction(self.actionVideos_2)
        self.menuLearn.addAction(self.menuLesson.menuAction())
        self.menuValidate_files.addAction(self.actionValidate_Console_files)
        self.menuValidate_files.addAction(self.actionValidate)
        self.menuValidate_files.addAction(self.actionValidate_All)
        self.menuRepair_2.addAction(self.menuValidate_files.menuAction())
        self.menuRepair_2.addAction(self.actionReinstall_VKode)
        self.menubar.addAction(self.menuDev_View.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuModules.menuAction())
        self.menubar.addAction(self.menuRepair_2.menuAction())
        self.menubar.addAction(self.menuLearn.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "VKode Dev View"))

        self.label.setText(_translate("MainWindow", "Dev View"))
        self.label_2.setText(_translate("MainWindow", file1))
        self.label_3.setText(_translate("MainWindow", file2))
        self.label_4.setText(_translate("MainWindow", file3))
        self.pushButton.setText(_translate("MainWindow", "OPEN"))
        self.pushButton_2.setText(_translate("MainWindow", "OPEN"))
        self.pushButton_3.setText(_translate("MainWindow", "OPEN"))
        self.pushButton_4.setText(_translate("MainWindow", "FILE TRANSFER"))
        self.pushButton_5.setText(_translate("MainWindow", "VIEW FULL LOG"))
        self.label_5.setText(_translate("MainWindow", "BETA"))
        self.label_6.setText(_translate("MainWindow", "IMPORTANT! DEV VIEW IS EXPERIMENTAL FEATURE and may not work properly. Some features are not fully available yet."))
        self.label_7.setText(_translate("MainWindow", " (c) VÃ­t Kozel, 2021. Part of VKode. Read license at vkode.xyz/license. vkode.https://twiter.com/vkode_"))
        self.menuDev_View.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.menuFTP.setTitle(_translate("MainWindow", "FTP"))
        self.menuVKode_Updater.setTitle(_translate("MainWindow", "VKode Updater"))
        self.menuModules.setTitle(_translate("MainWindow", "Modules"))
        self.menuLearn.setTitle(_translate("MainWindow", "Learn"))
        self.menuLesson.setTitle(_translate("MainWindow", "Lesson"))
        self.menuRepair_2.setTitle(_translate("MainWindow", "Repair"))
        self.menuValidate_files.setTitle(_translate("MainWindow", "Validate files"))
        self.actionExit.setText(_translate("MainWindow", "Restart"))
        self.actionOpen_Console.setText(_translate("MainWindow", "Open Console"))
        self.actionOpen_folder.setText(_translate("MainWindow", "VK Settings"))
        self.actionDocumentation.setText(_translate("MainWindow", "Documentation"))
        self.actionOfficial_Website.setText(_translate("MainWindow", "Official Website"))
        self.actionTwitter.setText(_translate("MainWindow", "Twitter"))
        self.actionExit_2.setText(_translate("MainWindow", "Exit"))
        self.actionExit_2.setStatusTip(_translate("MainWindow", "Close Dev View"))
        self.actionFTP.setText(_translate("MainWindow", "FTP"))
        self.actionrun_logs.setText(_translate("MainWindow", "run() logs"))
        self.action_s.setText(_translate("MainWindow", "s.saver logs"))
        self.actionFTP_2.setText(_translate("MainWindow", "run() logs"))
        self.actionSet_FTP.setText(_translate("MainWindow", "Set FTP"))
        self.actionPush_FTP.setText(_translate("MainWindow", "Push FTP"))
        self.actionVKode_Settings.setText(_translate("MainWindow", "VKode Settings"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionCheck_for_updates.setText(_translate("MainWindow", "Check VKode for updates"))
        self.actionDocumentation_2.setText(_translate("MainWindow", "Documentation"))
        self.actionSet_FTP_2.setText(_translate("MainWindow", "Set FTP"))
        self.actionPush_FTP_2.setText(_translate("MainWindow", "Push FTP"))
        self.actionFirst_steps.setText(_translate("MainWindow", "First steps"))
        self.actionHow_to_Dev_View.setText(_translate("MainWindow", "How to Dev View"))
        self.actionFirst_steps_2.setText(_translate("MainWindow", "First steps"))
        self.actionFiles.setText(_translate("MainWindow", "Files"))
        self.actionDonate.setText(_translate("MainWindow", "Support development"))
        self.actionGetting_started.setText(_translate("MainWindow", "Getting started"))
        self.actionCheck_for_DV_updates.setText(_translate("MainWindow", "Check for DV updates"))
        self.actionCheck_for_Devview_updates.setText(_translate("MainWindow", "Check for Devview updates"))
        self.actionCheck_for_updates_2.setText(_translate("MainWindow", "Check for updates"))
        self.actionGet_modules.setText(_translate("MainWindow", "Get modules"))
        self.actionInstalled_modules.setText(_translate("MainWindow", "Installed modules"))
        self.actionLearn.setText(_translate("MainWindow", "Learn"))
        self.actionDocumentation_3.setText(_translate("MainWindow", "Documentation"))
        self.actionVideos_2.setText(_translate("MainWindow", "Videos"))
        self.actionChoose.setText(_translate("MainWindow", "Choose"))
        self.actionDev_View_FTP.setText(_translate("MainWindow", "Dev View FTP"))
        self.actionPublish_module.setText(_translate("MainWindow", "Uninstall modules"))
        self.actionPublish_module_2.setText(_translate("MainWindow", "Publish module"))
        self.actionValidate_VKode_files.setText(_translate("MainWindow", "Validate VKode files"))
        self.actionReinstall_VKode.setText(_translate("MainWindow", "Reinstall VKode"))
        self.actionValidate_Console_files.setText(_translate("MainWindow", "Validate Console"))
        self.actionValidate.setText(_translate("MainWindow", "Validate basic Vkode files"))
        self.actionValidate_All.setText(_translate("MainWindow", "Validate All"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
